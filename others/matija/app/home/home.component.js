"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var calendarModule = require("nativescript-ui-calendar");
var color_1 = require("color");
var HomeComponent = /** @class */ (function () {
    function HomeComponent() {
        this.items = [];
        this.currentPagerIndex = 1;
        this.categoricalSource = [
            { Country: "7", Amount: 3 },
            { Country: "8", Amount: 2 },
            { Country: "9", Amount: 6 },
            { Country: "10", Amount: 8, },
            { Country: "11", Amount: 5, },
            { Country: "12", Amount: 0, },
            { Country: "13", Amount: 9, }
        ];
        this.categoricalSourceNew = [
            { Country: "111", Amount: 4 },
            { Country: "118", Amount: 0 },
            { Country: "220", Amount: 7 },
            { Country: "152", Amount: 2, },
            { Country: "77", Amount: 1, },
            { Country: "66", Amount: 9, },
            { Country: "67", Amount: 9, },
            { Country: "152", Amount: 2, },
            { Country: "25", Amount: 1, },
            { Country: "33", Amount: 4, },
            { Country: "88", Amount: 9, }
        ];
        this.categoricalSourceThird = [
            { Country: "111", Amount: 2 },
            { Country: "118", Amount: 6 },
            { Country: "220", Amount: 6 },
            { Country: "152", Amount: 6, },
        ];
        this.calendarEvents = [];
        // Creating dummy events
        this.calendarEvents = this.createDummyEvents();
        this.items = [{
                myTitle: "First Slide",
                source: this.categoricalSource
            }, {
                myTitle: "Second Slide",
                source: this.categoricalSourceNew
            }, {
                myTitle: "Third Slide",
                source: this.categoricalSourceThird
            }, {
                myTitle: "Forth Slide",
                source: this.categoricalSourceNew
            }, {
                myTitle: "Fifth Slide",
                source: this.categoricalSource
            }];
    }
    HomeComponent.prototype.ngOnInit = function () {
    };
    HomeComponent.prototype.onIndexChanged = function (args) {
        // console.log(args);    
    };
    HomeComponent.prototype.createDummyEvents = function () {
        var events = [];
        var now = new Date();
        var startDate;
        var endDate;
        var colors = [new color_1.Color(200, 188, 26, 214), new color_1.Color(220, 255, 109, 130), new color_1.Color(255, 55, 45, 255), new color_1.Color(199, 17, 227, 10), new color_1.Color(255, 255, 54, 3)];
        for (var i = 1; i < 10; i++) {
            startDate = new Date(now.getFullYear(), now.getMonth(), i * 2, 1);
            endDate = new Date(now.getFullYear(), now.getMonth(), (i * 2), 3);
            var event_1 = new calendarModule.CalendarEvent("event " + i, startDate, endDate, false, colors[i * 10 % (colors.length - 1)]);
            events.push(event_1);
            if (i % 3 == 0) {
                event_1 = new calendarModule.CalendarEvent("second " + i, startDate, endDate, true, colors[i * 5 % (colors.length - 1)]);
                events.push(event_1);
            }
        }
        return events;
    };
    HomeComponent = __decorate([
        core_1.Component({
            selector: "Home",
            moduleId: module.id,
            templateUrl: "./home.component.html",
            styleUrls: ['./home.component.css']
        }),
        __metadata("design:paramtypes", [])
    ], HomeComponent);
    return HomeComponent;
}());
exports.HomeComponent = HomeComponent;
//# sourceMappingURL=data:application/json;base64,